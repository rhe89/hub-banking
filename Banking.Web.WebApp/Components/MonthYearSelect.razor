@inherits BaseComponent

<div class="@SelectWrapperClass">
    <MudSelect
        Disabled="State.Months.Count == 0"
        Placeholder="Select"
        T="int"
        @bind-Value="@State.Month"
        Label="Month"
        Variant="@Constants.InputVariant"
        AnchorOrigin="@Origin.BottomCenter">
        @if (State.Months != null)
        {
            <MudSelectItem T="int" Value="0">All</MudSelectItem>

            foreach (var month in State.Months)
            {
                <MudSelectItem T="int" Value="month">@TextUtils.GetMonthText(month)</MudSelectItem>
            }
        }
    </MudSelect>
</div>
<div class="@SelectWrapperClass">
    <MudSelect
        Disabled="State.Years.Count == 0"
        Placeholder="Select"
        T="int"
        @bind-Value="@State.Year"
        Label="Year"
        Variant="@Constants.InputVariant"
        AnchorOrigin="@Origin.BottomCenter">
        @if (State.Years != null)
        {
            <MudSelectItem T="int" Value="0">All</MudSelectItem>
            
            foreach (var year in State.Years)
            {
                <MudSelectItem T="int" Value="year">@year</MudSelectItem>
            }
        }
    </MudSelect>
</div>

@code {

    [Parameter]
    public string SelectWrapperClass { get; set; }

    protected override void OnInitialized()
    {
        State.OnStateUpdated += QueryParametersChanged;
    }

    private async void QueryParametersChanged(object sender, EventArgs e)
    {
        await InvokeAsync(StateHasChanged);
    }

}