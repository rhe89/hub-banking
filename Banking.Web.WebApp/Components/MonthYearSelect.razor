@using Banking.Shared
@inherits BaseComponent

<div class="@SelectWrapperClass">
    <MudSelect
        Disabled="@(State.MonthsInYears.Count == 0)"
        Placeholder="Select"
        T="MonthInYear"
        @bind-Value="@State.MonthInYear"
        Label="Month"
        Variant="@Constants.InputVariant"
        AnchorOrigin="@Origin.BottomCenter">
        @if (State.MonthsInYears != null)
        {
            <MudSelectItem T="MonthInYear" Value="new MonthInYear(0, 0)">All</MudSelectItem>

            var year = 0;
            
            foreach (var monthInYear in State.MonthsInYears)
            {
                var borderClass = year != monthInYear.Year ? "border-top" : "";
                var fwClass = monthInYear.Month == DateTimeUtils.Today.Month && monthInYear.Year == DateTimeUtils.Today.Year ?
                    "fw-bold" : "";
                
                <MudSelectItem
                    T="MonthInYear"
                    Value="monthInYear"
                    Class=@($"{borderClass} {fwClass}")>
                    @monthInYear.DisplayText
                </MudSelectItem>
                
                year = monthInYear.Year;
            }
        }
    </MudSelect>
</div>

@code {

    [Parameter]
    public string SelectWrapperClass { get; set; }

    protected override void OnInitialized()
    {
        State.OnStateUpdated += QueryParametersChanged;
    }

    private async void QueryParametersChanged(object sender, EventArgs e)
    {
        await InvokeAsync(StateHasChanged);
    }

}