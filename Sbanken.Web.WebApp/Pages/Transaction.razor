@page "/transactions/{transactionId}"
@using Sbanken.Providers
@using Sbanken.Services
@using Microsoft.AspNetCore.Components
@using Hub.Shared.DataContracts.Sbanken

@inject ITransactionProvider _transactionProvider
@inject ITransactionService _transactionService
@inject NavigationManager _uriHelper

<h1>
    Transaction details
</h1>

<NavLink Match="NavLinkMatch.All" href="transactions">Go back</NavLink>

<section class="mt-3">
    @if (_transaction == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        if (!_edit)
        {
            <div class="row">
                <div class="col-12">
                    <label @onclick="() => _edit = true" class="clickable">
                        Description: @_transaction.Description
                    </label>
                </div>
            </div>
        }
        else
        {
            <EditForm Model="@_transaction" OnValidSubmit="@Submit">
                <div class="row">
                    <div class="col-1">
                        <label>Description: </label>
                    </div>
                    <div class="col-11">
                        <InputText 
                            id="description" 
                            @bind-Value="_transaction.Description"/>
                    </div>
                </div>
                <div class="row mb-2 mt-2">
                    <div class="col-2 offset-1 btn-group">
                        <button class="btn btn-primary" type="submit">Save</button>
                        <button class="btn btn-secondary mx-1" type="button" @onclick="() => _edit = false">Cancel</button>
                    </div>
                </div>
            </EditForm>
        }
    
        <div class="row">
            <div class="col-4">
                <label>
                    Transaction date: @_transaction.TransactionDate.ToShortDateString()
                </label>
            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <label>
                    Amount: @_transaction.Amount
                </label>
            </div>
        </div>
    }
</section>


@code {

    [Parameter]
    public string TransactionId { get; set; }

    private TransactionDto _transaction;
    private bool _edit; 
    
    protected override async Task OnInitializedAsync()
    {
        _transaction = await _transactionProvider.GetTransaction(long.Parse(TransactionId));
    }

    private async Task Submit()
    {
        await _transactionService.UpdateTransactionDescription(_transaction.Id, _transaction.Description);
        
        _uriHelper.NavigateTo("transactions");
    }
}